apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    labels:
      template: postgresql-ephemeral-template
    name: postgresql-inventory
  spec:
    ports:
    - name: postgresql
      nodePort: 0
      port: 5433
      protocol: TCP
      targetPort: 5433
    selector:
      name: postgresql-inventory
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      template: postgresql-ephemeral-template
    name: postgresql-inventory
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: postgresql-inventory
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: postgresql-inventory
      spec:
        containers:
        - capabilities: {}
          env:
          - name: POSTGRESQL_USER
            value: inventory
          - name: POSTGRESQL_PASSWORD
            value: inventory
          - name: POSTGRESQL_DATABASE
            value: inventory
          image: registry.redhat.io/rhel8/postgresql-10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: postgresql-inventory
          ports:
          - containerPort: 5433
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-inventory-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - emptyDir:
            medium: ""
          name: postgresql-inventory-data
  status: {}
