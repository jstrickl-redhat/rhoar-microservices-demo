apiVersion: 1.0.0
metadata:
  name: order-management
projects:
- name: gateway
  source:
    type: git
    location: https://github.com/rromannissen/gateway-crw.git
    branch: master
- name: orders
  source:
    type: git
    location: https://github.com/rromannissen/orders-crw.git
    branch: master
- name: inventory
  source:
    type: git
    location: https://github.com/rromannissen/inventory-crw.git
    branch: master
- name: customers
  source:
    type: git
    location: https://github.com/rromannissen/customers-crw.git
    branch: master
components:
- id: redhat/java/latest
  type: chePlugin
- id: redhat/dependency-analytics/latest
  type: chePlugin
- alias: maven
  type: dockerimage
  mountSources: true
  endpoints:
  - name: '8080-tcp-gateway'
    port: 8080
  - name: '8081-tcp-orders'
    port: 8081
  - name: '8082-tcp-inventory'
    port: 8082
  - name: '8083-tcp-customers'
    port: 8083
  - name: 'debug-gateway'
    port: 5005
    attributes:
      public: 'false'
  - name: 'debug-orders'
    port: 5006
    attributes:
      public: 'false'
  - name: 'debug-inventory'
    port: 5007
    attributes:
      public: 'false'
  - name: 'debug-customers'
    port: 5008
    attributes:
      public: 'false'
  memoryLimit: 768Mi
  volumes:
  - name: m2
    containerPath: /home/jboss/.m2
  image: registry.redhat.io/codeready-workspaces/plugin-java11-rhel8
  env:
  - value: '-XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/jboss'
    name: JAVA_OPTS
  - value: $(JAVA_OPTS)
    name: MAVEN_OPTS
- alias: postgresql-customers
  type: kubernetes
  reference: ./postgresql-customers.yaml
- alias: postgresql-orders
  type: kubernetes
  reference: ./postgresql-orders.yaml
- alias: postgresql-inventory
  type: kubernetes
  reference: ./postgresql-inventory.yaml
- alias: jaeger
  type: openshift
  reference: ./jaeger.yaml
commands:
- name: Build gateway with Maven
  actions:
  - type: exec
    component: maven
    command: "mvn clean install"
    workdir: ${CHE_PROJECTS_ROOT}/gateway
- name: Run gateway service
  actions:
  - type: exec
    component: maven
    command: |
          java -jar -Dspring.profiles.active=crw -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005 \
          target/*.jar
    workdir: ${CHE_PROJECTS_ROOT}/gateway
- name: Build orders with Maven
  actions:
  - type: exec
    component: maven
    command: "mvn clean install"
    workdir: ${CHE_PROJECTS_ROOT}/orders
- name: Run orders service
  actions:
  - type: exec
    component: maven
    command: |
          java -jar -Dspring.profiles.active=crw -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006 \
          target/*.jar
    workdir: ${CHE_PROJECTS_ROOT}/orders
- name: Debug gateway java service
  actions:
  - type: vscode-launch
    referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
            {
              "type": "java",
              "name": "Debug (Attach) - Gateway Remote",
              "request": "attach",
              "hostName": "localhost",
              "port": 5005
            },
            {
              "type": "java",
              "name": "Debug (Attach) - Orders Remote",
              "request": "attach",
              "hostName": "localhost",
              "port": 5006
            }]
          }
